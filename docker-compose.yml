services:

  mongo:
    image: mongo:8
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    networks:
      - geo-metadata-net

  geo-metadata-service:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: geo-metadata-service
    environment:
      SPRING_PROFILES_ACTIVE: logstash-logs,rest-audit-logs, jwt-mock

      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB: ${MONGO_DB}

      RMQ_HOST: ${RMQ_HOST}
      RMQ_PORT: ${RMQ_PORT}
      RMQ_USERNAME: ${RMQ_USERNAME}
      RMQ_PASSWORD: ${RMQ_PASSWORD}
      RMQ_VHOST: ${RMQ_VHOST}

      ISSUER_URI: ${ISSUER_URI}

      LOGSTASH_HOST: ${LOGSTASH_HOST}
      LOGSTASH_PORT: ${LOGSTASH_PORT}
      LOGSTASH_KEEP_ALIVE: ${LOGSTASH_KEEP_ALIVE}
      LOGSTASH_RECONNECT: ${LOGSTASH_RECONNECT}
    ports:
      - "8085:8080"
    depends_on:
      - mongo
    networks:
      - geo-metadata-net
      - geo-net

volumes:
  mongo-data:

networks:
  geo-metadata-net:
  geo-net:
    external: true
